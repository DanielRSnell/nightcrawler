{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/app/api/v1/auth/userinfo/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\n\nexport const dynamic = 'force-static';\n\n// Mock Keycloak userinfo endpoint\nexport async function GET() {\n  // In a real implementation, you would validate the token here\n  // For mock purposes, we'll just return user info\n  \n  const mockUserInfo = {\n    sub: '1234567890',\n    email_verified: true,\n    name: 'Test User',\n    preferred_username: 'testuser',\n    given_name: 'Test',\n    family_name: 'User',\n    email: 'test@example.com',\n    realm_access: {\n      roles: ['offline_access', 'uma_authorization', 'default-roles-nightcrawler']\n    },\n    resource_access: {\n      'nightcrawler-api': {\n        roles: ['user']\n      },\n      account: {\n        roles: ['manage-account', 'manage-account-links', 'view-profile']\n      }\n    }\n  };\n  \n  return NextResponse.json(mockUserInfo);\n}\n\nexport async function POST() {\n  return NextResponse.json(\n    { error: 'method_not_allowed', error_description: 'HTTP method not allowed' },\n    { status: 405 }\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,UAAU;AAGhB,eAAe;IACpB,8DAA8D;IAC9D,iDAAiD;IAEjD,MAAM,eAAe;QACnB,KAAK;QACL,gBAAgB;QAChB,MAAM;QACN,oBAAoB;QACpB,YAAY;QACZ,aAAa;QACb,OAAO;QACP,cAAc;YACZ,OAAO;gBAAC;gBAAkB;gBAAqB;aAA6B;QAC9E;QACA,iBAAiB;YACf,oBAAoB;gBAClB,OAAO;oBAAC;iBAAO;YACjB;YACA,SAAS;gBACP,OAAO;oBAAC;oBAAkB;oBAAwB;iBAAe;YACnE;QACF;IACF;IAEA,OAAO,oPAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAEO,eAAe;IACpB,OAAO,oPAAA,CAAA,eAAY,CAAC,IAAI,CACtB;QAAE,OAAO;QAAsB,mBAAmB;IAA0B,GAC5E;QAAE,QAAQ;IAAI;AAElB","debugId":null}}]
}