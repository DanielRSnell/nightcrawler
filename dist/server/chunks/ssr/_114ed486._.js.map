{
  "version": 3,
  "sources": [],
  "sections": [
    {
      "offset": {
        "line": 7,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/lib/utils.ts"
        ],
        "sourcesContent": [
          "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"
        ],
        "names": [],
        "mappings": ";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 23,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/components/ui/card.tsx"
        ],
        "sourcesContent": [
          "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col rounded-lg border shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"p-6 pt-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center p-6 pt-0\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"
        ],
        "names": [],
        "mappings": ";;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,kWAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,kWAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,kWAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,kWAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,kWAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,kWAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 108,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/components/dashboard/StatsCards.jsx"
        ],
        "sourcesContent": [
          "'use client';\n\nimport { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Card } from '@/components/ui/card';\nimport { \n  Server, \n  Cpu, \n  Activity, \n  Network, \n  CircleDashed \n} from 'lucide-react';\n\n// Function to generate random changes for the stats\nconst generateStatChange = (baseValue, percentRange) => {\n  const changePercent = Math.random() * percentRange - (percentRange / 2);\n  return {\n    value: Math.floor(baseValue * (1 + changePercent / 100)),\n    trend: changePercent.toFixed(1)\n  };\n};\n\nexport function StatsCards({ stats: initialStats }) {\n  const [stats, setStats] = useState(initialStats || []);\n  // Track individual update counters for each stat\n  const [updateCounters, setUpdateCounters] = useState(() => \n    initialStats ? initialStats.map(() => 0) : []\n  );\n\n  // Update local state when props change\n  useEffect(() => {\n    if (initialStats) {\n      setStats(initialStats);\n    }\n  }, [initialStats]);\n\n  useEffect(() => {\n    // Set up individual intervals for each stat\n    const intervals = stats.map((stat, index) => {\n      // Different base update intervals for each type of metric\n      const baseInterval = \n        stat.title.includes('Demand') ? 5000 : // 5 seconds\n        stat.title.includes('Nodes') ? 7000 : // 7 seconds\n        stat.title.includes('Workflows') ? 3000 : // 3 seconds\n        stat.title.includes('Utilization') ? 2000 : // 2 seconds\n        4000; // Default 4 seconds\n      \n      // Add randomness to prevent predictable patterns\n      const updateInterval = baseInterval + (Math.random() * 2000 - 1000); // +/- 1 second\n      \n      return setInterval(() => {\n        // Different fluctuation rates for different metrics\n        const fluctuationRate = \n          stat.title.includes('Demand') ? 3 : \n          stat.title.includes('Nodes') ? 2 :\n          stat.title.includes('Workflows') ? 8 :\n          stat.title.includes('Utilization') ? 1.5 : 5;\n          \n        const change = generateStatChange(stat.value, fluctuationRate);\n        \n        // Update only this specific stat\n        setStats(prevStats => \n          prevStats.map((s, i) => \n            i === index ? {\n              ...s,\n              value: change.value,\n              trend: change.trend > 0 ? `+${change.trend}` : change.trend\n            } : s\n          )\n        );\n        \n        // Update only this stat's counter\n        setUpdateCounters(prev => \n          prev.map((counter, i) => i === index ? counter + 1 : counter)\n        );\n      }, updateInterval);\n    });\n    \n    // Clear all intervals on cleanup\n    return () => intervals.forEach(interval => clearInterval(interval));\n  }, []);\n\n  // Format number with commas and handle decimals appropriately\n  const formatNumber = (num) => {\n    if (typeof num === 'number') {\n      return num.toLocaleString('en-US', {\n        minimumFractionDigits: num % 1 === 0 ? 0 : 1,\n        maximumFractionDigits: num % 1 === 0 ? 0 : 1\n      });\n    }\n    return num;\n  };\n\n  // Get the appropriate icon component based on name\n  const getIconComponent = (iconName) => {\n    switch (iconName) {\n      case 'Server': return Server;\n      case 'Cpu': return Cpu;\n      case 'Activity': return Activity;\n      case 'Network': return Network;\n      default: return CircleDashed;\n    }\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n      {stats.map((stat, index) => {\n        // Get the icon component directly\n        const IconComponent = getIconComponent(stat.iconName);\n        \n        return (\n          <Card \n            key={`${stat.title}-${index}`}\n            className=\"bg-black border-2border-gray-900/30 shadow-lg overflow-hidden relative\"\n          >\n            {/* Subtle gradient overlay for depth */}\n            <div className=\"absolute inset-0 bg-gradient-to-br from-transparent to-black/30 pointer-events-none\"></div>\n            \n            <div className=\"p-6 flex flex-col relative z-10\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-sm font-medium text-gray-400\">{stat.title}</h3>\n                <IconComponent className=\"h-5 w-5 text-white\" />\n              </div>\n              \n              <AnimatePresence mode=\"wait\">\n                <motion.div\n                  key={`value-${stat.title}-${updateCounters[index]}`}\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: 10 }}\n                  transition={{ duration: 0.3 }}\n                  className=\"text-2xl font-bold text-white\"\n                >\n                  {stat.prefix}{formatNumber(stat.value)}{stat.suffix}\n                </motion.div>\n              </AnimatePresence>\n              \n              <div className=\"mt-1 flex items-center text-xs\">\n                <span className={parseFloat(stat.trend) >= 0 ? \"text-green-400\" : \"text-red-400\"}>\n                  {stat.trend}%\n                </span>\n                <span className=\"ml-1 text-gray-400\">{stat.period}</span>\n              </div>\n            </div>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n"
        ],
        "names": [],
        "mappings": "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",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 325,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/components/ui/chart.jsx"
        ],
        "sourcesContent": [
          "'use client'\n\nimport * as React from 'react'\nimport { \n  ResponsiveContainer, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip as RechartsTooltip\n} from 'recharts'\n\nexport function ChartContainer({\n  config,\n  children,\n  className,\n  ...props\n}) {\n  // Generate CSS variables for chart colors\n  const style = React.useMemo(() => {\n    if (!config) return {}\n    \n    return Object.entries(config).reduce((acc, [key, value]) => {\n      acc[`--color-${key}`] = value.color\n      return acc\n    }, {})\n  }, [config])\n\n  return (\n    <div className={className} style={style} {...props}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        {children}\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport function CustomTooltip({ active, payload, label, config }) {\n  if (!active || !payload?.length || !config) return null\n\n  return (\n    <div className=\"rounded-lg border border-gray-900/30 bg-black/90 p-2 shadow-md backdrop-blur-sm\">\n      <div className=\"text-xs font-medium text-foreground\">{label}</div>\n      <div className=\"mt-1 space-y-0.5\">\n        {payload.map((item, index) => {\n          const dataKey = item.dataKey\n          const configItem = config[dataKey]\n          \n          if (!configItem) return null\n          \n          return (\n            <div key={index} className=\"flex items-center space-x-2\">\n              <div \n                className=\"h-2 w-2 rounded-full\" \n                style={{ backgroundColor: configItem.color }}\n              />\n              <span className=\"text-xs text-muted-foreground\">\n                {configItem.label}:\n              </span>\n              <span className=\"text-xs font-medium text-foreground\">\n                {item.value.toLocaleString()}\n              </span>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\n// Type definition for chart configuration\nexport const ChartConfig = {}\n"
        ],
        "names": [],
        "mappings": ";;;;;;AAEA;AACA;AAHA;;;;AAWO,SAAS,eAAe,EAC7B,MAAM,EACN,QAAQ,EACR,SAAS,EACT,GAAG,OACJ;IACC,0CAA0C;IAC1C,MAAM,QAAQ,CAAA,GAAA,yTAAA,CAAA,UAAa,AAAD,EAAE;QAC1B,IAAI,CAAC,QAAQ,OAAO,CAAC;QAErB,OAAO,OAAO,OAAO,CAAC,QAAQ,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,MAAM;YACrD,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,KAAK;YACnC,OAAO;QACT,GAAG,CAAC;IACN,GAAG;QAAC;KAAO;IAEX,qBACE,kWAAC;QAAI,WAAW;QAAW,OAAO;QAAQ,GAAG,KAAK;kBAChD,cAAA,kWAAC,4QAAA,CAAA,sBAAmB;YAAC,OAAM;YAAO,QAAO;sBACtC;;;;;;;;;;;AAIT;AAEO,SAAS,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE;IAC9D,IAAI,CAAC,UAAU,CAAC,SAAS,UAAU,CAAC,QAAQ,OAAO;IAEnD,qBACE,kWAAC;QAAI,WAAU;;0BACb,kWAAC;gBAAI,WAAU;0BAAuC;;;;;;0BACtD,kWAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,MAAM;oBAClB,MAAM,UAAU,KAAK,OAAO;oBAC5B,MAAM,aAAa,MAAM,CAAC,QAAQ;oBAElC,IAAI,CAAC,YAAY,OAAO;oBAExB,qBACE,kWAAC;wBAAgB,WAAU;;0CACzB,kWAAC;gCACC,WAAU;gCACV,OAAO;oCAAE,iBAAiB,WAAW,KAAK;gCAAC;;;;;;0CAE7C,kWAAC;gCAAK,WAAU;;oCACb,WAAW,KAAK;oCAAC;;;;;;;0CAEpB,kWAAC;gCAAK,WAAU;0CACb,KAAK,KAAK,CAAC,cAAc;;;;;;;uBATpB;;;;;gBAad;;;;;;;;;;;;AAIR;AAGO,MAAM,cAAc,CAAC",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 444,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/components/dashboard/OverviewChart.jsx"
        ],
        "sourcesContent": [
          "'use client';\n\nimport { useState, useEffect, useMemo, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { Area, AreaChart, Line, LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { ChartContainer, CustomTooltip } from '@/components/ui/chart';\n\nexport function OverviewChart({ chartData, className }) {\n  // Calculate a fixed height to match the RecentWorkflows component\n  // RecentWorkflows uses 5 items * 60px + 24px padding\n  const fixedContainerHeight = 5 * 60 + 24; // 324px\n  // Default data if none provided\n  const defaultData = {\n    title: 'Silicon Allocation',\n    subtitle: 'Real-time utilization',\n    yAxisLabel: 'Units',\n    series: [\n      {\n        name: 'GPU A100',\n        color: 'rgba(56, 189, 248, 1)',\n        baseValue: 650,\n        variance: 30\n      },\n      {\n        name: 'GPU H100',\n        color: 'rgba(62, 207, 142, 1)',\n        baseValue: 450,\n        variance: 25\n      },\n      {\n        name: 'TPU v4',\n        color: 'rgba(255, 220, 50, 1)',\n        baseValue: 280,\n        variance: 20\n      },\n      {\n        name: 'CPU EPYC',\n        color: 'rgba(255, 65, 105, 1)',\n        baseValue: 210,\n        variance: 15\n      }\n    ]\n  };\n\n  // Use provided data or fallback to default\n  const { title, subtitle, yAxisLabel } = chartData || defaultData;\n  // If chartData has series with data property, convert to our new format\n  const seriesConfig = useMemo(() => {\n    if (chartData?.series && chartData.series[0]?.data) {\n      // Convert old format to new format\n      return chartData.series.map(s => ({\n        name: s.name,\n        color: s.color,\n        baseValue: s.data[s.data.length - 1]?.value || 500,\n        variance: Math.floor(s.baseValue * 0.05) || 25\n      }));\n    }\n    return defaultData.series;\n  }, [chartData]);\n  \n  // State for time-series data\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const maxDataPoints = 60; // Show last 60 seconds\n  \n  // Generate random fluctuation within variance range\n  const generateRandomFluctuation = (baseValue, variance) => {\n    return baseValue + (Math.random() * variance * 2 - variance);\n  };\n  \n  // Initialize time series data\n  useEffect(() => {\n    // Create initial data points\n    const initialData = [];\n    const now = new Date();\n    \n    // Generate data for the last 60 seconds\n    for (let i = 59; i >= 0; i--) {\n      const timestamp = new Date(now.getTime() - i * 1000);\n      const dataPoint = {\n        time: timestamp.toISOString(),\n        displayTime: `${timestamp.getMinutes().toString().padStart(2, '0')}:${timestamp.getSeconds().toString().padStart(2, '0')}`\n      };\n      \n      // Add values for each series\n      seriesConfig.forEach(s => {\n        const key = s.name.toLowerCase().replace(/\\s+/g, '_');\n        dataPoint[key] = generateRandomFluctuation(s.baseValue, s.variance);\n      });\n      \n      initialData.push(dataPoint);\n    }\n    \n    setTimeSeriesData(initialData);\n    \n    // Log for debugging\n    console.log('Initial data created:', initialData[0]);\n  }, [seriesConfig]); // Add seriesConfig as dependency\n  \n  // Update data every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      \n      // Create new data point\n      const newDataPoint = {\n        time: now.toISOString(),\n        displayTime: `${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`\n      };\n      \n      // Add values for each series\n      seriesConfig.forEach(s => {\n        const key = s.name.toLowerCase().replace(/\\s+/g, '_');\n        newDataPoint[key] = generateRandomFluctuation(s.baseValue, s.variance);\n      });\n      \n      // Update time series data, keeping only the last maxDataPoints\n      setTimeSeriesData(prevData => {\n        const newData = [...prevData, newDataPoint];\n        if (newData.length > maxDataPoints) {\n          return newData.slice(newData.length - maxDataPoints);\n        }\n        return newData;\n      });\n      \n      // Log for debugging\n      console.log('New data point added:', newDataPoint);\n    }, 1000); // Update every second\n    \n    return () => clearInterval(interval);\n  }, [seriesConfig]);\n  \n  // Create chart config for shadcn/ui chart\n  const chartConfig = useMemo(() => {\n    return seriesConfig.reduce((config, s) => {\n      const key = s.name.toLowerCase().replace(/\\s+/g, '_');\n      config[key] = {\n        label: s.name,\n        color: s.color\n      };\n      return config;\n    }, {});\n  }, [seriesConfig]);\n\n  return (\n    <div className={`bg-black border-2border-gray-900/30 shadow-lg rounded-lg p-6 relative overflow-hidden ${className}`}>\n      {/* Subtle gradient overlay for depth */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-transparent to-black/30 pointer-events-none\"></div>\n      \n      <div className=\"space-y-2 relative z-10\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{title}</h3>\n          <p className=\"text-sm text-gray-400\">{subtitle}</p>\n        </div>\n        \n        <div \n          className=\"relative overflow-hidden mt-6\" \n          style={{ height: `${fixedContainerHeight}px`, minHeight: `${fixedContainerHeight}px` }}\n        >\n          <ChartContainer config={chartConfig} className=\"w-full h-full\">\n            <AreaChart \n              data={timeSeriesData}\n              margin={{ top: 10, right: 10, left: 10, bottom: 20 }}\n              className=\"chart-container\"\n            >\n              <defs>\n                {seriesConfig.map((s) => {\n                  const dataKey = s.name.toLowerCase().replace(/\\s+/g, '_');\n                  return (\n                    <linearGradient key={`gradient-${dataKey}`} id={`gradient-${dataKey}`} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"5%\" stopColor={s.color} stopOpacity={0.8}/>\n                      <stop offset=\"95%\" stopColor={s.color} stopOpacity={0.1}/>\n                    </linearGradient>\n                  );\n                })}\n              </defs>\n              <CartesianGrid \n                strokeDasharray=\"3 3\" \n                vertical={false} \n                stroke=\"var(--chart-grid)\" \n                className=\"chart-grid\"\n              />\n              <XAxis \n                dataKey=\"displayTime\" \n                axisLine={false} \n                tickLine={false} \n                tick={{ fill: 'var(--chart-text)' }}\n                dy={10}\n                fontSize={12}\n                interval=\"preserveStartEnd\"\n                minTickGap={30}\n              />\n              <YAxis \n                axisLine={false} \n                tickLine={false} \n                tick={{ fill: 'var(--chart-text)' }}\n                width={40}\n                fontSize={12}\n                tickFormatter={(value) => new Intl.NumberFormat('en-US', { notation: 'compact' }).format(value)}\n              />\n              <Tooltip \n                content={({ active, payload, label }) => (\n                  <CustomTooltip active={active} payload={payload} label={label} config={chartConfig} />\n                )}\n                cursor={{ stroke: 'rgba(255, 255, 255, 0.2)' }}\n              />\n              \n              {/* Debug information */}\n              {timeSeriesData.length === 0 && (\n                <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" fill=\"white\">\n                  Loading data...\n                </text>\n              )}\n              \n              {/* Render an Area for each series */}\n              {seriesConfig.map((s, index) => {\n                const dataKey = s.name.toLowerCase().replace(/\\s+/g, '_');\n                return (\n                  <Area \n                    key={dataKey}\n                    type=\"monotone\"\n                    dataKey={dataKey} \n                    stroke={s.color}\n                    fillOpacity={1}\n                    fill={`url(#gradient-${dataKey})`}\n                    stackId=\"1\"\n                    animationDuration={300}\n                    animationEasing=\"ease-out\"\n                    isAnimationActive={true}\n                  />\n                );\n              })}\n            </AreaChart>\n          </ChartContainer>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
        ],
        "names": [],
        "mappings": "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",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 815,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/components/ui/avatar.jsx"
        ],
        "sourcesContent": [
          "\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils.ts\"\n\nconst Avatar = React.forwardRef(({ className, children, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n))\nAvatar.displayName = \"Avatar\"\n\nexport { Avatar }\n"
        ],
        "names": [],
        "mappings": ";;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,uBAAS,CAAA,GAAA,yTAAA,CAAA,aAAgB,AAAD,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBAClE,kWAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGL,OAAO,WAAW,GAAG",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 843,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/components/dashboard/RecentSales.jsx"
        ],
        "sourcesContent": [
          "'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Avatar } from '@/components/ui/avatar';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Clock, Check, AlertTriangle } from 'lucide-react';\n\n// Get color for silicon type\nconst getSiliconTypeColor = (type) => {\n  const colors = {\n    'GPU A100': 'text-sky-400',\n    'GPU H100': 'text-emerald-400',\n    'TPU v4': 'text-yellow-400',\n    'CPU EPYC': 'text-rose-400'\n  };\n  return colors[type] || 'text-gray-400';\n};\n\n// Get status icon and color\nconst getStatusInfo = (status) => {\n  switch (status) {\n    case 'Completed':\n      return { icon: Check, color: 'text-green-400' };\n    case 'Running':\n      return { icon: Clock, color: 'text-blue-400' };\n    case 'Failed':\n      return { icon: AlertTriangle, color: 'text-red-400' };\n    default:\n      return { icon: Clock, color: 'text-gray-400' };\n  }\n};\n\nexport function RecentSales({ workflowData, className }) {\n  // Default data if none provided\n  const defaultData = {\n    title: 'Recent Workflows',\n    subtitle: 'No recent workflows',\n    workflows: []\n  };\n\n  // Use provided data or fallback to default\n  const { title, subtitle, workflows: initialWorkflows } = workflowData || defaultData;\n  \n  // State for workflows with animated updates\n  const [workflows, setWorkflows] = useState(initialWorkflows || []);\n  const [updateCounter, setUpdateCounter] = useState(0);\n\n  // Update local state when props change\n  useEffect(() => {\n    if (initialWorkflows) {\n      setWorkflows(initialWorkflows);\n    }\n  }, [initialWorkflows]);\n\n  // Simulate periodic workflow updates with individual animations\n  useEffect(() => {\n    if (workflows.length === 0) return;\n    \n    // Function to generate a new workflow\n    const generateNewWorkflow = () => {\n      const siliconTypes = ['GPU A100', 'GPU H100', 'TPU v4', 'CPU EPYC'];\n      const workflowTypes = ['Training Pipeline', 'Inference Job', 'Data Processing', 'Model Evaluation', 'Batch Prediction'];\n      const statuses = ['Completed', 'Running', 'Completed', 'Completed']; // More chance of completed\n      \n      return {\n        name: workflowTypes[Math.floor(Math.random() * workflowTypes.length)],\n        id: `WF-${7834 + updateCounter}`,\n        status: statuses[Math.floor(Math.random() * statuses.length)],\n        siliconType: siliconTypes[Math.floor(Math.random() * siliconTypes.length)],\n        duration: `${Math.floor(Math.random() * 59 + 1)}m ${Math.floor(Math.random() * 59 + 1)}s`,\n        avatarFallback: 'NW',\n        isNew: true, // Mark as new for animation\n        key: `wf-${Date.now()}-${Math.random().toString(36).substring(2, 9)}` // Unique key for animation\n      };\n    };\n    \n    // Function to update a single workflow's status\n    const updateWorkflowStatus = (index) => {\n      const newWorkflows = [...workflows];\n      // Check if index is valid\n      if (index < 0 || index >= newWorkflows.length) {\n        return newWorkflows; // Return unchanged if index is invalid\n      }\n      \n      const workflow = newWorkflows[index];\n      // Check if workflow exists\n      if (!workflow) {\n        return newWorkflows; // Return unchanged if workflow doesn't exist\n      }\n      \n      // Update status based on current status\n      if (workflow.status === 'Running') {\n        // 80% chance to complete, 20% chance to fail\n        workflow.status = Math.random() < 0.8 ? 'Completed' : 'Failed';\n        workflow.statusChanged = true; // Mark for animation\n      } else if (workflow.status === 'Failed' || workflow.status === 'Completed') {\n        // If completed or failed, it will be removed in the next update\n        workflow.toRemove = true; // Mark for removal animation\n      }\n      \n      return newWorkflows;\n    };\n    \n    // Function to update a workflow's duration\n    const updateWorkflowDuration = (index) => {\n      const newWorkflows = [...workflows];\n      // Check if index is valid\n      if (index < 0 || index >= newWorkflows.length) {\n        return newWorkflows; // Return unchanged if index is invalid\n      }\n      \n      const workflow = newWorkflows[index];\n      // Check if workflow exists and has required properties\n      if (!workflow || !workflow.duration || workflow.status !== 'Running') {\n        return newWorkflows; // Return unchanged if workflow doesn't exist or isn't running\n      }\n      \n      try {\n        const mins = parseInt(workflow.duration.split('m')[0]);\n        const secs = parseInt(workflow.duration.split('m ')[1].split('s')[0]);\n        \n        // Increment duration for running workflows\n        const newSecs = secs + Math.floor(Math.random() * 5) + 1;\n        if (newSecs >= 60) {\n          workflow.duration = `${mins + 1}m ${newSecs - 60}s`;\n        } else {\n          workflow.duration = `${mins}m ${newSecs}s`;\n        }\n        \n        workflow.durationChanged = true; // Mark for animation\n      } catch (error) {\n        // If there's an error parsing the duration, set a default\n        workflow.duration = '1m 0s';\n        console.warn('Error updating workflow duration, reset to default');\n      }\n      \n      return newWorkflows;\n    };\n    \n    // Main interval for workflow updates\n    const mainInterval = setInterval(() => {\n      let newWorkflows = [...workflows];\n      \n      // Instead of immediately removing workflows marked for removal,\n      // we keep them but continue to show their removal animation\n      \n      // Determine if we need to add a new workflow\n      const activeWorkflows = newWorkflows.filter(w => !w.toRemove).length;\n      let shouldAddNew = activeWorkflows < 5 || Math.random() < 0.15;\n      \n      // If we're adding a new workflow, first mark one for removal if needed\n      if (shouldAddNew && activeWorkflows >= 5) {\n        // Find the oldest completed/failed workflow to remove\n        const completedIndex = newWorkflows.findIndex(w => \n          !w.toRemove && (w.status === 'Completed' || w.status === 'Failed')\n        );\n        \n        if (completedIndex >= 0) {\n          newWorkflows[completedIndex].toRemove = true;\n          // Give it time to animate out before adding the new one\n          setTimeout(() => {\n            // Add the new workflow\n            const newWorkflow = generateNewWorkflow();\n            setWorkflows(current => [newWorkflow, ...current]);\n          }, 400); // Slight delay to let the removal animation start\n          \n          // Skip adding a new workflow immediately\n          shouldAddNew = false;\n        }\n      }\n      \n      // Add a new workflow if needed and we didn't just schedule one\n      if (shouldAddNew) {\n        const newWorkflow = generateNewWorkflow();\n        newWorkflows.unshift(newWorkflow);\n      }\n      \n      // 3. Randomly update status of an existing workflow (30% chance)\n      if (Math.random() < 0.3 && newWorkflows.length > 0) {\n        // Find a running workflow to update or pick a random one\n        const runningIndex = newWorkflows.findIndex(w => w && w.status === 'Running');\n        // Only proceed if we have workflows to update\n        if (newWorkflows.length > 0) {\n          const indexToUpdate = runningIndex >= 0 ? runningIndex : Math.floor(Math.random() * newWorkflows.length);\n          newWorkflows = updateWorkflowStatus(indexToUpdate);\n        }\n      }\n      \n      // 4. Update durations of running workflows\n      newWorkflows.forEach((workflow, index) => {\n        if (workflow && workflow.status === 'Running') {\n          newWorkflows = updateWorkflowDuration(index);\n        }\n      });\n      \n      // 5. Clear animation flags from previous updates\n      newWorkflows.forEach(workflow => {\n        workflow.isNew = false;\n        workflow.statusChanged = false;\n        workflow.durationChanged = false;\n      });\n      \n      // 6. Cleanup: Actually remove workflows that have completed their exit animation\n      // We use a separate timeout to ensure the animation has time to complete\n      const toRemoveIds = newWorkflows\n        .filter(w => w.toRemove)\n        .map(w => w.key || `${w.id}`);\n      \n      if (toRemoveIds.length > 0) {\n        setTimeout(() => {\n          setWorkflows(current => \n            current.filter(w => !toRemoveIds.includes(w.key || `${w.id}`))\n          );\n        }, 300); // Shorter time for simpler exit animation\n      }\n      \n      setWorkflows(newWorkflows);\n      setUpdateCounter(prev => prev + 1);\n    }, 3000); // Update every 3 seconds for more dynamic feeling\n    \n    return () => clearInterval(mainInterval);\n  }, [workflows, updateCounter]);\n\n  // Calculate a fixed height based on 5 workflow items plus spacing\n  // Each workflow item is approximately 60px tall with margins\n  const fixedContainerHeight = 5 * 60 + 24; // 5 items + header padding\n  \n  return (\n    <div className={`bg-black border-2border-gray-900/30 shadow-lg rounded-lg p-6 relative overflow-hidden ${className}`}>\n      {/* Subtle gradient overlay for depth */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-transparent to-black/30 pointer-events-none\"></div>\n      \n      <div className=\"space-y-6 relative z-10\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{title}</h3>\n          <p className=\"text-sm text-gray-400\">{subtitle}</p>\n        </div>\n        <div \n          className=\"relative overflow-hidden\" \n          style={{ height: `${fixedContainerHeight}px`, minHeight: `${fixedContainerHeight}px` }}\n        >\n          {/* Empty placeholder workflows to maintain height when fewer than 5 items */}\n          {workflows.length === 0 && (\n            <div className=\"h-full flex items-center justify-center\">\n              <p className=\"text-gray-500 text-sm\">No workflows available</p>\n            </div>\n          )}\n          <AnimatePresence initial={false}>\n            {workflows.map((workflow, index) => {\n              const StatusIcon = getStatusInfo(workflow.status).icon;\n              const isRemoving = workflow.toRemove;\n              \n              return (\n                <motion.div \n                  key={workflow.key || `${workflow.id}-${index}`}\n                  layout\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ \n                    opacity: 1, \n                    height: 'auto'\n                  }}\n                  exit={{ \n                    opacity: 0,\n                    height: 0\n                  }}\n                  transition={{ \n                    opacity: { duration: 0.2 },\n                    height: { duration: 0.2 }\n                  }}\n                  className=\"flex items-center justify-between overflow-hidden mb-6 relative\"\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    <Avatar className=\"h-9 w-9 bg-gray-800/50 /50 text-white border border-gray-700\">\n                      <div className=\"flex items-center justify-center h-full w-full text-sm font-medium\">\n                        {workflow.avatarFallback}\n                      </div>\n                    </Avatar>\n                    <div className=\"space-y-1\">\n                      <p className=\"text-sm font-medium text-white\">{workflow.name}</p>\n                      <div className=\"flex items-center space-x-2\">\n                        <p className=\"text-xs text-gray-400\">{workflow.id}</p>\n                        <span className=\"text-xs text-gray-600\">•</span>\n                        <p className={`text-xs ${getSiliconTypeColor(workflow.siliconType)}`}>{workflow.siliconType}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"flex items-center\">\n                      <Clock className=\"h-3 w-3 mr-1 text-gray-400\" />\n                      <motion.p \n                        className=\"text-xs text-gray-400\"\n                        initial={workflow.durationChanged ? { opacity: 0 } : false}\n                        animate={{ \n                          opacity: 1,\n                          color: workflow.durationChanged ? ['#9CA3AF', '#60A5FA', '#9CA3AF'] : '#9CA3AF'\n                        }}\n                        transition={{ \n                          duration: 0.3\n                        }}\n                      >\n                        {workflow.duration}\n                      </motion.p>\n                    </div>\n                    <div className={`flex items-center ${getStatusInfo(workflow.status).color}`}>\n                      <StatusIcon className=\"h-3 w-3 mr-1\" />\n                      <motion.p \n                        className=\"text-xs\"\n                        initial={workflow.statusChanged ? { opacity: 0 } : false}\n                        animate={{ \n                          opacity: 1,\n                          fontWeight: workflow.statusChanged ? [400, 600, 400] : 400\n                        }}\n                        transition={{ \n                          duration: 0.3\n                        }}\n                      >\n                        {workflow.status}\n                      </motion.p>\n                    </div>\n                  </div>\n                </motion.div>\n              );\n            })}\n          </AnimatePresence>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
        ],
        "names": [],
        "mappings": "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",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 1366,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/components/ui/gauge.tsx"
        ],
        "sourcesContent": [
          "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/lib/utils';\nimport { motion } from 'framer-motion';\n\nexport interface GaugeProps {\n  value: number;\n  max?: number;\n  size?: 'sm' | 'md' | 'lg';\n  showValue?: boolean;\n  label?: string;\n  unit?: string;\n  className?: string;\n  colorMode?: 'auto' | 'success' | 'warning' | 'danger' | 'info';\n}\n\nexport function Gauge({\n  value,\n  max = 100,\n  size = 'md',\n  showValue = true,\n  label,\n  unit = '',\n  className,\n  colorMode = 'auto',\n}: GaugeProps) {\n  // Calculate percentage\n  const percentage = Math.min(Math.max(0, value), max) / max * 100;\n  \n  // Determine color based on percentage or forced colorMode\n  const getColor = (opacity = 1) => {\n    let color;\n    if (colorMode !== 'auto') {\n      switch (colorMode) {\n        case 'success': color = 'var(--success, #10b981)'; break;\n        case 'warning': color = 'var(--warning, #f59e0b)'; break;\n        case 'danger': color = 'var(--danger, #ef4444)'; break;\n        case 'info': color = 'var(--info, #3b82f6)'; break;\n        default: color = 'var(--primary, #6366f1)';\n      }\n    } else {\n      // Auto color based on percentage\n      if (percentage < 30) color = 'var(--danger, #ef4444)';\n      else if (percentage < 70) color = 'var(--warning, #f59e0b)';\n      else color = 'var(--success, #10b981)';\n    }\n    \n    // If opacity is not 1, convert to rgba\n    if (opacity !== 1) {\n      // Handle CSS variables\n      if (color.startsWith('var(')) {\n        return `var(--${colorMode}-translucent, rgba(255, 255, 255, ${opacity}))`;\n      }\n      // Handle hex colors\n      return color.replace(/^#/, '').match(/.{2}/g)?.map(x => parseInt(x, 16)) || [0, 0, 0];\n    }\n    \n    return color;\n  };\n  \n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      width: 120,\n      strokeWidth: 12,\n      fontSize: 'text-2xl',\n      labelSize: 'text-xs',\n      valueOffset: 0,\n      labelOffset: 2,\n    },\n    md: {\n      width: 160,\n      strokeWidth: 16,\n      fontSize: 'text-3xl',\n      labelSize: 'text-sm',\n      valueOffset: 0,\n      labelOffset: 4,\n    },\n    lg: {\n      width: 220,\n      strokeWidth: 24,\n      fontSize: 'text-4xl',\n      labelSize: 'text-base',\n      valueOffset: 0,\n      labelOffset: 6,\n    },\n  };\n  \n  const { width, strokeWidth, fontSize, labelSize, valueOffset, labelOffset } = sizeConfig[size];\n  const radius = (width - strokeWidth) / 2;\n  const circumference = Math.PI * radius; // Only half circle (180 degrees)\n  \n  // Calculate SVG path for the arc (semi-circle)\n  const pathD = [\n    `M ${strokeWidth / 2}`,\n    `${width / 2}`,\n    `A ${radius} ${radius} 0 0 1 ${width - strokeWidth / 2}`,\n    `${width / 2}`,\n  ].join(' ');\n  \n  return (\n    <div className={cn('flex flex-col items-center justify-center', className)}>\n      <div className=\"relative\" style={{ width: `${width}px`, height: `${width / 2 + 30}px` }}>\n        {/* Background track */}\n        <svg\n          width={width}\n          height={width / 2}\n          viewBox={`0 0 ${width} ${width / 2}`}\n          className=\"transform rotate-0\"\n        >\n          {/* Background track with translucent color */}\n          <path\n            d={pathD}\n            fill=\"none\"\n            stroke={getColor(0.2)} // Use same color with opacity\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n          />\n          \n          {/* Colored progress */}\n          <path\n            d={pathD}\n            fill=\"none\"\n            stroke={getColor()}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            strokeDasharray={`${(percentage / 100) * circumference} ${circumference}`}\n            strokeDashoffset=\"0\"\n          />\n        </svg>\n        \n        {/* Value display */}\n        {showValue && (\n          <div \n            className=\"absolute inset-0 flex flex-col items-center justify-center pt-[23px]\"\n          >\n            <motion.div \n              className={cn(\"font-bold\", fontSize)}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.5, duration: 0.5 }}\n            >\n              {value}{unit}\n            </motion.div>\n            {label && (\n              <motion.div \n                className={cn(\"text-muted-foreground\", labelSize)}\n                style={{ marginTop: `${labelOffset}px` }}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.7, duration: 0.5 }}\n              >\n                {label}\n              </motion.div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} "
        ],
        "names": [],
        "mappings": "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",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 1571,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/components/ui/gauge-card.tsx"
        ],
        "sourcesContent": [
          "'use client';\n\nimport * as React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Gauge, GaugeProps } from '@/components/ui/gauge';\nimport { cn } from '@/lib/utils';\n\ninterface GaugeCardProps extends GaugeProps {\n  title?: string;\n  description?: string;\n  className?: string;\n  cardClassName?: string;\n}\n\nexport function GaugeCard({\n  title,\n  description,\n  className,\n  cardClassName,\n  ...gaugeProps\n}: GaugeCardProps) {\n  return (\n    <Card className={cn(\"custom-border border-gray-900/30/40 bg-black\", cardClassName)}>\n      {(title || description) && (\n        <CardHeader className=\"pb-0\">\n          {title && <CardTitle className=\"text-lg font-medium\">{title}</CardTitle>}\n          {description && <CardDescription>{description}</CardDescription>}\n        </CardHeader>\n      )}\n      <CardContent className={cn(\"flex justify-center pt-2 pb-4\", className)}>\n        <Gauge {...gaugeProps} />\n      </CardContent>\n    </Card>\n  );\n} "
        ],
        "names": [],
        "mappings": ";;;;AAGA;AACA;AACA;AALA;;;;;AAcO,SAAS,UAAU,EACxB,KAAK,EACL,WAAW,EACX,SAAS,EACT,aAAa,EACb,GAAG,YACY;IACf,qBACE,kWAAC,yHAAA,CAAA,OAAI;QAAC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6BAA6B;;YAC9C,CAAC,SAAS,WAAW,mBACpB,kWAAC,yHAAA,CAAA,aAAU;gBAAC,WAAU;;oBACnB,uBAAS,kWAAC,yHAAA,CAAA,YAAS;wBAAC,WAAU;kCAAuB;;;;;;oBACrD,6BAAe,kWAAC,yHAAA,CAAA,kBAAe;kCAAE;;;;;;;;;;;;0BAGtC,kWAAC,yHAAA,CAAA,cAAW;gBAAC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;0BAC1D,cAAA,kWAAC,0HAAA,CAAA,QAAK;oBAAE,GAAG,UAAU;;;;;;;;;;;;;;;;;AAI7B",
        "debugId": null
      }
    },
    {
      "offset": {
        "line": 1638,
        "column": 0
      },
      "map": {
        "version": 3,
        "sources": [
          "file:///Users/danielsnell/Desktop/projects/nightcrawler/dashboard/app/page.tsx"
        ],
        "sourcesContent": [
          "'use client'; // Convert this to a client component\n\nimport { Cpu, Server, Activity, Network } from 'lucide-react';\nimport { StatsCards } from '@/components/dashboard/StatsCards';\nimport { OverviewChart } from '@/components/dashboard/OverviewChart';\nimport { RecentSales } from '@/components/dashboard/RecentSales';\nimport { GaugeCard } from '@/components/ui/gauge-card.tsx';\n\nexport default function DashboardPage() {\n  // Mock data for stats cards\n  const statsData = [\n    {\n      title: 'Total Silicon Demand',\n      value: 1740,\n      trend: '+1.2',\n      period: 'from last week',\n      iconName: 'Server', // Use string names instead of component references\n      iconColor: 'text-blue-500',\n      iconBg: 'bg-blue-500'\n    },\n    {\n      title: 'Active Nodes',\n      value: 148,\n      trend: '0.0',\n      period: 'from last week',\n      iconName: 'Cpu',\n      iconColor: 'text-green-500',\n      iconBg: 'bg-green-500'\n    },\n    {\n      title: 'Pending Workflows',\n      value: 17,\n      trend: '+3.0',\n      period: 'from last week',\n      iconName: 'Activity',\n      iconColor: 'text-yellow-500',\n      iconBg: 'bg-yellow-500'\n    },\n    {\n      title: 'Network Utilization',\n      value: 86,\n      suffix: '%',\n      trend: '-0.5',\n      period: 'from last hour',\n      iconName: 'Network',\n      iconColor: 'text-rose-500',\n      iconBg: 'bg-rose-500'\n    }\n  ];\n\n  return (\n    <div className=\"flex-1 space-y-4 p-4 md:p-8 pt-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\n      </div>\n      \n      <StatsCards stats={statsData} />\n      \n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <GaugeCard \n          title=\"CPU Usage\" \n          description=\"Current utilization\" \n          value={25} \n          max={100} \n          label=\"Low usage\" \n          unit=\"%\" \n        />\n        <GaugeCard \n          title=\"Memory Usage\" \n          description=\"RAM allocation\" \n          value={58} \n          max={100} \n          label=\"Medium usage\" \n          unit=\"%\" \n          colorMode=\"warning\" \n        />\n        <GaugeCard \n          title=\"GPU Utilization\" \n          description=\"CUDA cores\" \n          value={82} \n          max={100} \n          label=\"High usage\" \n          unit=\"%\" \n          colorMode=\"success\" \n        />\n        <GaugeCard \n          title=\"Disk I/O\" \n          description=\"Read/Write operations\" \n          value={92} \n          max={100} \n          label=\"Critical\" \n          unit=\"%\" \n          colorMode=\"danger\" \n        />\n      </div>\n      \n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n        <OverviewChart className=\"lg:col-span-4\" chartData={{}} />\n        <RecentSales className=\"lg:col-span-3\" workflowData={{}} />\n      </div>\n    </div>\n  );\n}"
        ],
        "names": [],
        "mappings": ";;;;AAGA;AACA;AACA;AACA;AANA,cAAc,qCAAqC;;;;;;AAQpC,SAAS;IACtB,4BAA4B;IAC5B,MAAM,YAAY;QAChB;YACE,OAAO;YACP,OAAO;YACP,OAAO;YACP,QAAQ;YACR,UAAU;YACV,WAAW;YACX,QAAQ;QACV;QACA;YACE,OAAO;YACP,OAAO;YACP,OAAO;YACP,QAAQ;YACR,UAAU;YACV,WAAW;YACX,QAAQ;QACV;QACA;YACE,OAAO;YACP,OAAO;YACP,OAAO;YACP,QAAQ;YACR,UAAU;YACV,WAAW;YACX,QAAQ;QACV;QACA;YACE,OAAO;YACP,OAAO;YACP,QAAQ;YACR,OAAO;YACP,QAAQ;YACR,UAAU;YACV,WAAW;YACX,QAAQ;QACV;KACD;IAED,qBACE,kWAAC;QAAI,WAAU;;0BACb,kWAAC;gBAAI,WAAU;0BACb,cAAA,kWAAC;oBAAG,WAAU;8BAAoC;;;;;;;;;;;0BAGpD,kWAAC,sIAAA,CAAA,aAAU;gBAAC,OAAO;;;;;;0BAEnB,kWAAC;gBAAI,WAAU;;kCACb,kWAAC,kIAAA,CAAA,YAAS;wBACR,OAAM;wBACN,aAAY;wBACZ,OAAO;wBACP,KAAK;wBACL,OAAM;wBACN,MAAK;;;;;;kCAEP,kWAAC,kIAAA,CAAA,YAAS;wBACR,OAAM;wBACN,aAAY;wBACZ,OAAO;wBACP,KAAK;wBACL,OAAM;wBACN,MAAK;wBACL,WAAU;;;;;;kCAEZ,kWAAC,kIAAA,CAAA,YAAS;wBACR,OAAM;wBACN,aAAY;wBACZ,OAAO;wBACP,KAAK;wBACL,OAAM;wBACN,MAAK;wBACL,WAAU;;;;;;kCAEZ,kWAAC,kIAAA,CAAA,YAAS;wBACR,OAAM;wBACN,aAAY;wBACZ,OAAO;wBACP,KAAK;wBACL,OAAM;wBACN,MAAK;wBACL,WAAU;;;;;;;;;;;;0BAId,kWAAC;gBAAI,WAAU;;kCACb,kWAAC,yIAAA,CAAA,gBAAa;wBAAC,WAAU;wBAAgB,WAAW,CAAC;;;;;;kCACrD,kWAAC,uIAAA,CAAA,cAAW;wBAAC,WAAU;wBAAgB,cAAc,CAAC;;;;;;;;;;;;;;;;;;AAI9D",
        "debugId": null
      }
    }
  ]
}
